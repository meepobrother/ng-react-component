{
  "version": 3,
  "file": "ng-react-component.js",
  "sources": [
    "ng://ng-react-component/index.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, NgZone, Input, Output, KeyValueDiffer } from '@angular/core';\nimport { OnChanges, KeyValueChanges, DoCheck, KeyValueDiffers } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\n\nfunction defaults(target: any, options: any): KeyValue {\n    if (target === null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport interface KeyValue {\n    [key: string]: any;\n}\nexport abstract class ReactComponent<P extends KeyValue, T extends KeyValue> {\n    private _state: T;\n    @Input()\n    set state(val: T) {\n        this._state = val;\n    }\n    get state(): T {\n        return defaults(this.getInitialState(), this._props) as T;\n    }\n    get state$(): Observable<KeyValue> {\n        return this.stateChange.share();\n    }\n    private _props: P;\n    @Input()\n    set props(val: P) {\n        this._props = val;\n    }\n    get props(): P {\n        return defaults(this.getDefaultProps(), this._props) as P;\n    }\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n    private _stateDiffer: KeyValueDiffer<string, any>;\n    private _propsDiffer: KeyValueDiffer<string, any>;\n    constructor(\n        private _differs: KeyValueDiffers\n    ) { }\n    setState(state: T, key?: string): Observable<KeyValue> {\n        this._stateChanges();\n        this.state = defaults(this.state, state) as T;\n        const diffter = this._stateDiffer.diff(this.state);\n        if (diffter) {\n            this.onStateChange(diffter);\n            this.stateChange.emit(this.state);\n        }\n        return this.state$;\n    }\n    setProps(props: P, key?: string): Observable<P> {\n        this._propsChanges();\n        this.props = defaults(this.props, props) as P;\n        const diffter = this._propsDiffer.diff(this.props);\n        if (diffter) {\n            this.onPropsChange(diffter);\n            this.propsChange.emit(this.props);\n        }\n        return this.props$;\n    }\n    private _stateChanges() {\n        this._stateDiffer = this._differs.find(this.state).create();\n        return this._stateDiffer.diff(this.state);\n    }\n    private _propsChanges() {\n        this._propsDiffer = this._differs.find(this.props).create();\n        return this._propsDiffer.diff(this.props);\n    }\n    abstract onPropsChange(changes: KeyValueChanges<string, any>): void;\n    abstract onStateChange(changes: KeyValueChanges<string, any>): void;\n    abstract getDefaultProps(): P;\n    abstract getInitialState(): T;\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
