{
  "version": 3,
  "file": "ng-react-component.umd.js",
  "sources": [
    "ng://ng-react-component/index.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, NgZone, Input, Output, KeyValueDiffer } from '@angular/core';\nimport { OnChanges, KeyValueChanges, DoCheck, KeyValueDiffers } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\n\nfunction defaults(target: any, options: any): KeyValue {\n    if (target === null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport interface KeyValue {\n    [key: string]: any;\n}\nexport abstract class ReactComponent<P extends KeyValue, T extends KeyValue> {\n    private _state: T;\n    @Input()\n    set state(val: T) {\n        this._state = val;\n    }\n    get state(): T {\n        return defaults(this.getInitialState(), this._props) as T;\n    }\n    get state$(): Observable<KeyValue> {\n        return this.stateChange.share();\n    }\n    private _props: P;\n    @Input()\n    set props(val: P) {\n        this._props = val;\n    }\n    get props(): P {\n        return defaults(this.getDefaultProps(), this._props) as P;\n    }\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n    private _stateDiffer: KeyValueDiffer<string, any>;\n    private _propsDiffer: KeyValueDiffer<string, any>;\n    constructor(\n        private _differs: KeyValueDiffers\n    ) { }\n    setState(state: T, key?: string): Observable<KeyValue> {\n        this._stateChanges();\n        this.state = defaults(this.state, state) as T;\n        const diffter = this._stateDiffer.diff(this.state);\n        if (diffter) {\n            this.onStateChange(diffter);\n            this.stateChange.emit(this.state);\n        }\n        return this.state$;\n    }\n    setProps(props: P, key?: string): Observable<P> {\n        this._propsChanges();\n        this.props = defaults(this.props, props) as P;\n        const diffter = this._propsDiffer.diff(this.props);\n        if (diffter) {\n            this.onPropsChange(diffter);\n            this.propsChange.emit(this.props);\n        }\n        return this.props$;\n    }\n    private _stateChanges() {\n        this._stateDiffer = this._differs.find(this.state).create();\n        return this._stateDiffer.diff(this.state);\n    }\n    private _propsChanges() {\n        this._propsDiffer = this._differs.find(this.props).create();\n        return this._propsDiffer.diff(this.props);\n    }\n    abstract onPropsChange(changes: KeyValueChanges<string, any>): void;\n    abstract onStateChange(changes: KeyValueChanges<string, any>): void;\n    abstract getDefaultProps(): P;\n    abstract getInitialState(): T;\n}\n"
  ],
  "names": [
    "EventEmitter"
  ],
  "mappings": ";;;;;;;;;;;;;;;;IAKA,IAAA,MAAA,KAAA,IAAA,KAAA,OAAA,MAAA,KAAA,QAAA,IAAA,OAAA,MAAA,KAAA,UAAA,CAAA,EAAA;QACQ,MAAM,GAAd,EAAmB,CAAnB;KACA;IACA,IAAA,OAAA,EAAA;QACQ,MAAR,GAAiB,MAAjB,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAAA;KACA;IACA,OAAA,MAAA,CAAA;CACA;;;;;;;;;;;;;QAgCA,IAAA,CAAA,WAAA,GAAA,IAAAA,iBAAA,EAAA,CAAA;QACgB,IAAhB,CAAA,WAAgB,GAAhB,IAAAA,iBAAA,EAAA,CAAA;KALA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,OAAA,EAAA;;;;;;SArBA;;;;;;YAGA,IAAA,CAAA,MAAA,GAAA,GAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;;;;;;;;;;;QAMQ,YAAR,EAAA,IAAA;KACA,CAAA,CAAA;;;;;QAEQ,GAAR,EAAa,YAAb;YACA,yBAAA,QAAA,CAA4B,IAA5B,CAAA,eAAgD,EAAhD,EAAoD,IAApD,CAAA,MAAA,CAAA,EAAA;SACA;;;;;QAEQ,GAAR,EAAA,UAAA,GAAA,EAAA;YACA,IAAA,CAAA,MAAA,GAAA,GAAA,CAAA;;;;;;;;;QAWQ,GAAR,EAAA,YAAA;YACY,OAAO,IAAnB,CAAA,WAAA,CAAA,KAAA,EAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;;;;;;;QAEA,IAAY,CAAC,aAAb,EAAA,CAAA;QACQ,IAAI,CAAC,KAAb,qBAAA,QAAA,CAAA,IAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;QACQ,qBAAR,OAAA,GAAqB,IAArB,CAAA,YAAA,CAAA,IAAA,CAAA,IAAqD,CAAA,KAArD,CAAA,CAAA;QACQ,IAAR,OAAA,EAAA;YACY,IAAZ,CAAA,aAAA,CAAA,OAAA,CAAA,CAAA;YACY,IAAI,CAAC,WAAjB,CAAA,IAAA,CAAA,IAAsC,CAAC,KAAvC,CAAA,CAAA;SACA;QACA,OAAA,IAAA,CAAA,MAAA,CAAA;KACA,CAAA;;;;;;IAGA,cAAA,CAAA,SAA4B,CAA5B,QAAA,GAAA,UAAA,KAAA,EAAyD,GAAzD,EAAA;QACQ,IAAR,CAAA,aAAA,EAAA,CAAA;;;;;YAEA,IAAA,CAAyB,WAAzB,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;SACA;QACQ,OAAO,IAAI,CAAC,MAApB,CAAA;;;;;IA3CA,cAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;QAUA,IAAA,CAAA,YAAA,GAAK,IAAL,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,CAAA;QACA,OAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
}
