{
  "version": 3,
  "file": "ng-react-component.umd.js",
  "sources": [
    "ng://ng-react-component/index.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, NgZone, Input, Output } from '@angular/core';\nimport { OnChanges, SimpleChanges, DoCheck } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nfunction defaults(target: any, options: any) {\n    if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport class ReactComponent<P, T> {\n    private _state: T;\n    @Input()\n    set state(val: T) {\n        if (val && val !== this._state) {\n            this._state = val;\n            this.stateChange.emit(this._state);\n        }\n    }\n    get state(): T {\n        return this._state || {} as T;\n    }\n    get state$(): Observable<T> {\n        return this.stateChange.share();\n    }\n    private _props: P;\n    @Input()\n    set props(val: P) {\n        if (val && val !== this._props) {\n            this._props = val;\n            this.propsChange.emit(this._props);\n        }\n    }\n    get props(): P {\n        return this._props || {} as P;\n    }\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n    constructor() { }\n    private _extends(dest: any, source: any) {\n        return { ...dest, ...source };\n    }\n    setState(state: T): void {\n        this.state = defaults(state, this._state);\n    }\n\n    setProps(props: P): void {\n        this.props = defaults(props, this._props as any);\n    }\n}\n"
  ],
  "names": [
    "EventEmitter"
  ],
  "mappings": ";;;;;;;;;;;;;;;;IAIA,IAAA,MAAA,IAAkB,IAAlB,KAAA,OAAA,MAAA,KAAA,QAAA,IAAA,OAAA,MAAA,KAAA,UAAA,CAAA,EAAA;QACQ,MAAM,GAAd,EAAA,CAAA;KACA;IACA,IAAA,OAAA,EAAA;QACQ,MAAR,GAAiB,MAAjB,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAAA;KACA;IACA,OAAA,MAAA,CAAA;CACA;AACA,IAAA,cAAA,IAAA,YAAA;IACA,SAAA,cAAA,GAAA;QA+BA,IAAA,CAAA,WAAA,GAAA,IAAAA,iBAAA,EAAA,CAAA;QAFA,IAAA,CAAA,WAAA,GAA6C,IAAIA,iBAAY,EAAE,CAA/D;KACA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,OAAA,EAAA;;;;;YA5BA,OAAA,IAAA,CAAA,MAAA,KAAA,EAAA,CAAA,CAAA;SACA;;;;;;;;gBAKA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;aACA;SACA;;;;IACI,MAAJ,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,QAAA,EAAA;;;;;;;QAKQ,UAAR,EAAA,IAAA;QACQ,YAAR,EAAsB,IAAtB;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,OAAA,EAAA;;;;;;SAGA;;;;;;YAGA,IAAA,GAAA,IAAA,GAAA,KAAA,IAAA,CAAA,MAAA,EAAA;gBACA,IAAoB,CAApB,MAAA,GAAA,GAAA,CAAA;gBACA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;;;;;;IAIY,MAAZ,CAAA,cAA2C,CAA3C,cAAA,CAAA,SAAA,EAAA,QAAA,EAAA;;;;;;;QAGA,UAAqB,EAArB,IAAA;QACQ,YAAR,EAAA,IAAA;KACK,CAAL,CAAA;;;;;;IAGA,cAAkB,CAAlB,SAAA,CAA6B,QAA7B,GAAA,UAAA,IAAA,EAAA,MAAA,EAAA;QACA,OAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;IAXA,cAAA,CAAA,SAAK,CAAL,QAAA,GAAA,UAAA,KAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
}
