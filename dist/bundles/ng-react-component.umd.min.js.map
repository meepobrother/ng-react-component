{
  "version": 3,
  "file": "ng-react-component.umd.min.js",
  "sources": [
    "ng://ng-react-component/index.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, NgZone, Input, Output, KeyValueDiffer } from '@angular/core';\nimport { OnChanges, KeyValueChanges, DoCheck, KeyValueDiffers } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\n\nfunction defaults(target: any, options: any): KeyValue {\n    if (target === null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport interface KeyValue {\n    [key: string]: any;\n}\nexport abstract class ReactComponent<P extends KeyValue, T extends KeyValue> {\n    private _state: T;\n    @Input()\n    set state(val: T) {\n        this._state = val;\n    }\n    get state(): T {\n        return defaults(this.getInitialState(), this._props) as T;\n    }\n    get state$(): Observable<KeyValue> {\n        return this.stateChange.share();\n    }\n    private _props: P;\n    @Input()\n    set props(val: P) {\n        this._props = val;\n    }\n    get props(): P {\n        return defaults(this.getDefaultProps(), this._props) as P;\n    }\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n    private _stateDiffer: KeyValueDiffer<string, any>;\n    private _propsDiffer: KeyValueDiffer<string, any>;\n    constructor(\n        private _differs: KeyValueDiffers\n    ) { }\n    setState(state: T, key?: string): Observable<KeyValue> {\n        this._stateChanges();\n        this.state = defaults(this.state, state) as T;\n        const diffter = this._stateDiffer.diff(this.state);\n        if (diffter) {\n            this.onStateChange(diffter);\n            this.stateChange.emit(this.state);\n        }\n        return this.state$;\n    }\n    setProps(props: P, key?: string): Observable<P> {\n        this._propsChanges();\n        this.props = defaults(this.props, props) as P;\n        const diffter = this._propsDiffer.diff(this.props);\n        if (diffter) {\n            this.onPropsChange(diffter);\n            this.propsChange.emit(this.props);\n        }\n        return this.props$;\n    }\n    private _stateChanges() {\n        this._stateDiffer = this._differs.find(this.state).create();\n        return this._stateDiffer.diff(this.state);\n    }\n    private _propsChanges() {\n        this._propsDiffer = this._differs.find(this.props).create();\n        return this._propsDiffer.diff(this.props);\n    }\n    abstract onPropsChange(changes: KeyValueChanges<string, any>): void;\n    abstract onStateChange(changes: KeyValueChanges<string, any>): void;\n    abstract getDefaultProps(): P;\n    abstract getInitialState(): T;\n}\n"
  ],
  "names": [
    "target",
    "options",
    "Object",
    "assign",
    "this",
    "stateChange",
    "EventEmitter",
    "propsChange",
    "defineProperty",
    "ReactComponent",
    "prototype",
    "_state",
    "val",
    "enumerable",
    "configurable",
    "get",
    "defaults",
    "getDefaultProps",
    "_props",
    "set",
    "share",
    "_stateChanges",
    "state",
    "diffter",
    "_stateDiffer",
    "diff",
    "onStateChange",
    "emit",
    "state$",
    "setProps",
    "props",
    "key",
    "_propsChanges",
    "props$",
    "_differs",
    "find",
    "create"
  ],
  "mappings": "0UAWA,OANA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,KACQA,MAERC,IACQD,EAASE,OAAjBC,UAAAH,EAAAC,IAEAD,iDAiCAI,KAAAC,YAAA,IAAAC,EAAAA,aACgBF,KAAhBG,YAAA,IAAAD,EAAAA,oBAJAJ,OAAAM,eAAAC,EAAAC,UAAA,sFAlBAN,KAAAO,OAAAC,GAEAC,YAAA,8HAMQC,cAAR,+CAGQC,IAAK,WACb,OAAAC,EAA4BZ,KAA5Ba,kBAAoDb,KAApDc,SAGQC,IAAR,SAAAP,GACAR,KAAAc,OAAAN,+EAWQG,IAAR,WACY,OAAOX,KAAnBG,YAAAa,SAEAP,YAAA,EACAC,cAAA,uCAGAV,KAAaiB,gBACLjB,KAAKkB,MAAbN,EAAAZ,KAAAkB,MAAAA,GACQ,IAARC,EAAqBnB,KAArBoB,aAAAC,KAAArB,KAAqDkB,OAKrD,OAJAC,IACYnB,KAAZsB,cAAAH,GACYnB,KAAKC,YAAjBsB,KAAAvB,KAAuCkB,QAEvClB,KAAAwB,QAIAnB,EAAAC,UAAAmB,SAAA,SAAAC,EAAyDC,GACjD3B,KAAR4B,oFAIQ,iCAFR5B,KAAyBG,YAAzBoB,KAAAvB,KAAA0B,QAEe1B,KAAK6B,QA3CpBxB,EAAAC,UAAAW,cAAA,WAWA,OADAjB,KAAAoB,aAAKpB,KAAL8B,SAAAC,KAAA/B,KAAAkB,OAAAc,SACAhC,KAAAoB,aAAAC,KAAArB,KAAAkB"
}
