{
  "version": 3,
  "file": "ng-react-component.umd.min.js",
  "sources": [
    "ng://ng-react-component/index.ts"
  ],
  "sourcesContent": [
    "import { EventEmitter, NgZone, Input, Output } from '@angular/core';\nimport { OnChanges, SimpleChanges, DoCheck } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nfunction defaults(target: any, options: any) {\n    if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n        target = {};\n    }\n    if (options) {\n        target = { ...target, ...options };\n    }\n    return target;\n}\nexport class ReactComponent<P, T> {\n    private _state: T;\n    @Input()\n    set state(val: T) {\n        if (val && val !== this._state) {\n            this._state = val;\n            this.stateChange.emit(this._state);\n        }\n    }\n    get state(): T {\n        return this._state || {} as T;\n    }\n    get state$(): Observable<T> {\n        return this.stateChange.share();\n    }\n    private _props: P;\n    @Input()\n    set props(val: P) {\n        if (val && val !== this._props) {\n            this._props = val;\n            this.propsChange.emit(this._props);\n        }\n    }\n    get props(): P {\n        return this._props || {} as P;\n    }\n    get props$(): Observable<P> {\n        return this.propsChange.share();\n    }\n    @Output() stateChange: EventEmitter<T> = new EventEmitter();\n    @Output() propsChange: EventEmitter<P> = new EventEmitter();\n    constructor() { }\n    private _extends(dest: any, source: any) {\n        return { ...dest, ...source };\n    }\n    setState(state: T): void {\n        this.state = defaults(state, this._state);\n    }\n\n    setProps(props: P): void {\n        this.props = defaults(props, this._props as any);\n    }\n}\n"
  ],
  "names": [
    "target",
    "options",
    "Object",
    "assign",
    "ReactComponent",
    "this",
    "stateChange",
    "EventEmitter",
    "propsChange",
    "defineProperty",
    "prototype",
    "_state",
    "emit",
    "enumerable",
    "configurable",
    "val",
    "_props",
    "_extends",
    "dest",
    "source",
    "setState",
    "state"
  ],
  "mappings": "0UAUA,OANkB,MAAlBA,GAAA,iBAAAA,GAAA,mBAAAA,KACQA,MAERC,IACQD,EAASE,OAAjBC,UAAAH,EAAAC,IAEAD,EAEA,IAAAI,EAAA,WACA,SAAAA,IA+BAC,KAAAC,YAAA,IAAAC,EAAAA,aAFAF,KAAAG,YAA6C,IAAID,EAAAA,oBAEjDL,OAAAO,eAAAL,EAAAM,UAAA,wBA5BA,OAAAL,KAAAM,+DAMAN,KAAAC,YAAAM,KAAAP,KAAAM,0CAGIT,OAAJO,eAAAL,EAAAM,UAAA,0DAKQG,YAAR,EACQC,cAAc,IAEtBZ,OAAAO,eAAAL,EAAAM,UAAA,gEAMAK,GAAAA,IAAAV,KAAAW,SACAX,KAAAW,OAAAD,EACAV,KAAAG,YAAAI,KAAAP,KAAAW,0CAIYd,OAAZO,eAAAL,EAAAM,UAAA,0DAGAG,YAAA,EACQC,cAAR,IAIAV,EAAAM,UAA6BO,SAA7B,SAAAC,EAAAC,GACA,OAAAjB,OAAAC,UAAAe,EAAAC,IAXAf,EAAAM,UAAAU,SAAA,SAAAC,gGA/BA"
}
